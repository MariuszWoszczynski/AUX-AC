dashboard_import:
  package_import_url: github://MariuszWoszczynski/AUX-AC/aux-ac.yaml@main
  import_full_config: true

substitutions:
  name: "aux_ac"
  friendly_name: "AUX AC"

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  project:
    name: esphome.aux_ac
    version: "1.0"

esp32:
  board: lolin_c3_mini
  framework:
    type: arduino

logger:
    level: DEBUG

# Enable Home Assistant API
api:
  encryption:
    key: "q0M48mES8G278MS//dqgeOEV4dZ+CQTGp1CpPyRyLoA="

ota:
  - platform: esphome
    password: "0336e0744b241439aa1f5b07c9761d7d"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "AUX AC Fallback Hotspot"
 #   password: "GYF7BxOWOHoP"

web_server:
  port: 80
  version: 3

captive_portal:

# Status LED for connection
status_led:
  pin:
    # Blue LED
    number: GPIO8

button:
  # Restart the ESP
  - platform: restart
    name: "Restart - AUX AC"

text_sensor:
  # IP address and connected SSID
  - platform: wifi_info
    ip_address:
      name: '${friendly_name} - IP Address'
      icon: mdi:wifi
    ssid:
      name: '${friendly_name} - Connected SSID'
      icon: mdi:wifi-strength-2
      
sensor:
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"

# Ermöglicht die Bereitstellung von WiFi-Anmeldeinformationen über Bluetooth LE (nur ESP32).
esp32_improv:
  authorizer: none

# Externe Komponenten
external_components:
  - source:
      type: git
      url: https://github.com/GrKoR/esphome_aux_ac_component

# Board Konfiguration
uart:
  id: ac_uart_bus
  # ATTENTION! For TX and RX use GPIO4 (D2) and GPIO5 (D1) for NodeMCU-like boards!
  # See docs for details: https://github.com/GrKoR/esphome_aux_ac_component/blob/87f686564e743e3b1d0965a6bbc5780a173abbd1/docs/HARDWARE-EN.md
  rx_pin: GPIO20
  tx_pin: GPIO21
  baud_rate: 4800
  data_bits: 8
  parity: EVEN
  stop_bits: 1

# Klimaanlagen Konfiguration
climate:
  - platform: aux_ac
    name: "${friendly_name}"
    id: aux_id
    uart_id: ac_uart_bus
    period: 7s
    show_action: true
    display_inverted: false
    timeout: 150
    optimistic: true
    indoor_temperature:  # AC Indoor Temperature 
      name: Indoor Temperature 
      id: ac_indoor_temp
      accuracy_decimals: 1
      internal: false
    outdoor_temperature:  # AC Outdoor Temperature 
      name: Outdoor Temperature 
      id: ac_outdoor_temp
      internal: false
    outbound_temperature:  # AC Coolant Outbound Temperature 
      name: Coolant Outbound Temperature 
      id: ac_outbound_temp
      internal: false
    inbound_temperature:  # AC Coolant Inbound Temperature 
      name: Coolant Inbound Temperature
      id: ac_inbound_temp
      internal: false
    compressor_temperature:  # AC Compressor Temperature 
      name: Compressor Temperature
      id: ac_strange_temp
      internal: false
    display_state:  # AC Display State 
      name: Display State 
      id: ac_display_state
      internal: false
    defrost_state:  # AC Defrost State 
      name: Defrost State 
      id: ac_defrost_state
      internal: false
    inverter_power:  # AC Inverter Power 
      name: Inverter Power
      id: ac_inverter_power
      internal: false
    inverter_power_limit_value:  # AC Inverter Power Limit Value 
      name: Inverter Power Limit Value
      id: ac_inverter_power_limit_value
      internal: false
    inverter_power_limit_state:  # AC Inverter Power Limit State 
      name: Inverter Power Limit State 
      id: ac_inverter_power_limit_state
      internal: false
    preset_reporter:  # AC Preset Reporter 
      name: Preset Reporter 
      id: ac_preset_reporter
      internal: false
    vlouver_state:  # AC Vertical Louvers State 
      name: Vertical Louvers State 
      id: ac_vlouver_state
      internal: false
    visual:
      min_temperature: 16
      max_temperature: 32
      temperature_step: 1
    supported_modes:
      - HEAT_COOL
      - COOL
      - HEAT
      - DRY
      - FAN_ONLY
    custom_fan_modes:
      - MUTE
      - TURBO
    supported_presets:
      - SLEEP
    custom_presets:
      - CLEAN
      - HEALTH
      - ANTIFUNGUS
    supported_swing_modes:
      - VERTICAL
      - HORIZONTAL
      - BOTH
